/**
 * imperative-check.js
 */
var assert = require('assert');
var TestReporter = require('./../test-reporter');

var comcheck;
var reporter;

describe('imperative-check', () => {
    beforeEach(() => {
        reporter = new TestReporter();
        comcheck = require('../../index')();
        comcheck.register(require('../../checks/imperative-check').id);
    });

    it('should handle a well formatted sample message', () => {
        comcheck.check([
            'Capitalize short (50 chars or less) summary',
            '',
            'More detailed explanatory text, if necessary. Wrap it to about 72',
            'characters or so. In some contexts, the first line is treated as the',
            'subject of an email and the rest of the text as the body. The blank',
            'line separating the summary from the body is critical (unless you omit',
            'the body entirely); tools like rebase can get confused if you run the',
            'two together.',
            '',
            'Write your commit message in the imperative: "Fix bug" and not "Fixed',
            'bug" or "Fixes bug." This convention matches up with commit messages',
            'generated by commands like git merge and git revert.',
            '',
            'Further paragraphs come after blank lines.',
            '',
            '- Bullet points are okay, too',
            '',
            '- Typically a hyphen or asterisk is used for the bullet, followed by a',
            '  single space, with blank lines in between, but conventions vary here',
            '',
            '- Use a hanging indent'], reporter);
        reporter.check();
    });

    it('should find past tense verb', () => {
        comcheck.check('Fixed stuff', reporter);
        reporter.check({text: 'ed', row: 1, column: 4});
    });

    it('should find third person verb', () => {
        comcheck.check('Adds stuff', reporter);
        reporter.check({text: 's', row: 1, column: 4});
    });

    it('should ignore imperative if first word is not a verb', () => {
        comcheck.check('EV3 stuff', reporter);
        reporter.check();
    });
});

describe('imperative-check with tickets', () => {
    beforeEach(() => {
        reporter = new TestReporter();
        comcheck = require('../../index')({
            ticket: {
                pattern: /^[A-Z]+-[1-9][0-9]* /,
                threshold: [
                    /^[A-Za-z]+-[0-9]+\s+/
                ]
            }
        });
        comcheck.register(require('../../checks/imperative-check').id);
    });

    it('should find violations after the ticket', () => {
        comcheck.check('CAT-1651 Fixed en_US locale gradle build issue', reporter);
        reporter.check({text: 'ed', row: 1, column: 13});
    });
});
